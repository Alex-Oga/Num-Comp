Python
https://www.w3schools.com/python/default.asp
NumPy
https://numpy.org/learn/

Printing:
print()
print("Hello World")

Comments:
#This is a comment
print()#This is a comment
#print("Hello World")

Multi Line Comment:
"""
This is a comment
written in 
more than just one line
"""

Variables:
x = 5
y = "John"
print(x)
5
print(y)
John

Case-Sensitive:
Variable names are case-sensitive
a = 4
A = "Sally"
#A will not overwrite a

Variable names:
A variable can have a short name (like x and y) or a more descriptive name (age, carname, total_volume)
 - A variable name must start with a letter or the underscore character
 - A variable name cannot start with a number
 - A variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )
 - Variable names are case-sensitive (age, Age and AGE are three different variables)
e.g.
myvar = "John"
my_var = "John"
_my_var = "John"
myVar = "John"
MYVAR = "John"
myvar2 = "John"
Illegal variable names:
2myvar = "John"
my-var = "John"
my var = "John"

Multi Word Variable Names:
Variable names with more than one word can be difficult to read
There are several techniques you can use to make them more readable:
1.Camel Case
Each word, except the first, starts with a capital letter
myVariableName = "John"
2.Pascal Case 
Each word starts with a capital letter
MyVariableName = "John"
3.Snake Case
Each word is separated by an underscore character
my_variable_name = "John"

Casting:
x = str(3)   # '3'
y = int(3)   # 3
z = float(3) # 3.0

Get the type:
type()
x = 5
print(type(x))
<class 'int'>

Quotes:
String variables can be declared either by using single or double quotes
x = "John"
# Same as
x = 'John'

Assigning multiple values:
Note: Make sure the number of variables matches the number of values, or else you will get an error
Many Values to Multiple Variables:
Python allows you to assign values to multiple variables in one line
x, y, z = "Orange", "Banana", "Cherry"
One Value to Multiple Variables:
And you can assign the same value to multiple variables in one line
x = y = z = "Orange"

Unpack a Collection:
If you have a collection of values in a list, tuple etc. Python allows you extract the values into variables. This is called unpacking
fruits = ["apple", "banana", "cherry"]
x, y, z = fruits

Output Variables:
To combine both text and a variable, Python uses the + character
x = "awesome"
print("Python is " + x)
You can also use the + character to add a variable to another variable
x = "Python is "
y = "awesome"
z =  x + y
print(z)
For numbers, the + character works as a mathematical operator
x = 5
y = 10
print(x + y)
If you try to combine a string and a number, Python will give you an error




If/Else:
Python supports the usual logical conditions from mathematics
 - Equals: a == b
 - Not Equals: a != b
 - Less than: a < b
 - Less than or equal to: a <= b
 - Greater than: a > b
 - Greater than or equal to: a >= b
An "if statement" is written by using the if keyword
a = 33
b = 200
if b > a:
  print("b is greater than a")
If statement, without indentation (will raise an error)
Elif:
The elif keyword is pythons way of saying "if the previous conditions were not true, then try this condition"
a = 33
b = 33
if b > a:
  print("b is greater than a")
elif a == b:
  print("a and b are equal")
Else:
The else keyword catches anything which isn't caught by the preceding conditions
a = 200
b = 33
if b > a:
  print("b is greater than a")
elif a == b:
  print("a and b are equal")
else:
  print("a is greater than b")

Short Hand If:
If you have only one statement to execute, you can put it on the same line as the if statement
if a > b: print("a is greater than b")

Short Hand If ... Else:
If you have only one statement to execute, one for if, and one for else, you can put it all on the same line
a = 2
b = 330
print("A") if a > b else print("B")
This technique is known as Ternary Operators, or Conditional Expressions



For loop



While loop